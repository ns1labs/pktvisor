name: Debug Builds

on:
  push:
    branches: [ develop, master, release/**, crash_handler ]

jobs:
  build:
    runs-on: ./.github/actions/docker

    steps:
      - uses: actions/checkout@v2

      - name: Build pktvisor
        run: |          
          mkdir /pktvisor-src          
          cp ./.git/ /pktvisor-src/.git/
          cp ./src/ /pktvisor-src/src/
          cp ./cmd/ /pktvisor-src/cmd/
          cp ./3rd/ /pktvisor-src/3rd/
          cp ./docker/ /pktvisor-src/docker/
          cp ./golang/ /pktvisor-src/golang/
          cp ./integration_tests/ /pktvisor-src/integration_tests/
          cp ./cmake/ /pktvisor-src/cmake/
          cp ./CMakeLists.txt /pktvisor-src/
          cp ./conanfile.txt /pktvisor-src/
          mkdir /tmp/build
          cd /tmp/build
          conan profile new --detect default && \
          conan profile update settings.compiler.libcxx=libstdc++11 default && \
          conan config set general.revisions_enabled=1          
          PKG_CONFIG_PATH=/local/lib/pkgconfig cmake -DCMAKE_BUILD_TYPE=Debug -DASAN=ON /pktvisor-src && \
          make all -j 4
          zip pktvisord.zip /tmp/build/bin/pktvisord
          curl --data-binary @pktvisord.zip -H "Expect: gzip" "https://pktvisortest.sp.backtrace.io:6098/post?format=symbols&token=b109dbe0fb5fe46c83de7b11ca5d47eb122a6803461fe277850b89eac153eac0"

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Get Conan
        uses: turtlebrowser/get-conan@v1.0

      - name: Configure CMake to generate VERSION
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Debug

      - name: Get branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Debug branch name
        run: echo ${{ env.BRANCH_NAME }}

      - name: Get VERSION
        run: |
          echo "VERSION=`cat ${{github.workspace}}/build/VERSION`" >> $GITHUB_ENV

      - name: Debug version
        run: echo ${{ env.VERSION }}

      - name: Generate ref tag (master)
        if: ${{ env.BRANCH_NAME == 'master' }}
        run: |
          echo "REF_TAG=latest-debug" >> $GITHUB_ENV

      - name: Generate ref tag (develop)
        if: ${{ env.BRANCH_NAME == 'develop' }}
        run: |
          echo "REF_TAG=latest-develop-debug" >> $GITHUB_ENV

      - name: Generate ref tag (release candidate)
        if: ${{ env.BRANCH_NAME == 'release' }}
        run: |
          echo "REF_TAG=latest-rc-debug" >> $GITHUB_ENV

      - name: Debug ref tag
        run: echo ${{ env.REF_TAG }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build + push - pktvisor debug
        env:
          IMAGE_NAME: ns1labs/pktvisor
        run: |
          docker build . --file docker/Dockerfile.debug --tag ${{ env.IMAGE_NAME }}:${{ env.REF_TAG }}
          docker push -a ${{ env.IMAGE_NAME }}
