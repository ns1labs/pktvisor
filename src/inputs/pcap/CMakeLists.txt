message(STATUS "Input Module: Pcap")

set_directory_properties(PROPERTIES CORRADE_USE_PEDANTIC_FLAGS ON)

if (WIN32)
    find_package(npcap REQUIRED CONFIG)
    set(ADDITIONAL_LIBS npcap::npcap)
else()
    find_package(libpcap REQUIRED CONFIG)
    set(ADDITIONAL_LIBS libpcap::libpcap)
endif()

corrade_add_static_plugin(VisorInputPcap ${CMAKE_CURRENT_BINARY_DIR}
        PcapInput.conf
        PcapInputModulePlugin.cpp
        PcapInputStream.cpp
        afpacket.cpp
        )
add_library(Visor::Input::Pcap ALIAS VisorInputPcap)

target_include_directories(VisorInputPcap
        INTERFACE
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
        )

message(STATUS "NPCAP_INCLUDE_DIRS: ${NPCAP_INCLUDE_DIRS}")
message(STATUS "ADDITIONAL_LIBS: ${ADDITIONAL_LIBS}")

target_link_libraries(VisorInputPcap
        PUBLIC
        ${ADDITIONAL_LIBS}
        Visor::Core
        Visor::Lib::Utils
        )

set(VISOR_STATIC_PLUGINS ${VISOR_STATIC_PLUGINS} Visor::Input::Pcap PARENT_SCOPE)

## TEST SUITE
add_executable(unit-tests-input-pcap
        tests/test_mock_traffic.cpp
        tests/test_parse_pcap.cpp)

find_package(Catch2 REQUIRED)

target_link_libraries(unit-tests-input-pcap
        PRIVATE Visor::Input::Pcap
        Catch2::Catch2WithMain)

add_test(NAME unit-tests-input-pcap
        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/src
        COMMAND unit-tests-input-pcap)