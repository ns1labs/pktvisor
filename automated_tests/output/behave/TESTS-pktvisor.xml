<?xml version="1.0" encoding="UTF-8"?>
<testsuite time="47.67912817001343" tests='23' skipped='0'
name="Pktvisor" failures='7' errors='0'><testcase time="1.9256503582000732" name="Pktvisor_Bootstrap" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: pktvisor bootstrap
                when run pktvisor instance on port available with user permission ... passed in 1.276s 
                then the pktvisor container status must be running ... passed in 0.01585s 
                then pktvisor API must be enabled ... passed in 0.6302s 
                then 2 policies must be running ... passed in 0.003976s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="3.469451904296875" name="Run_Multiple_Pktvisors_Instances_Using_Different_Ports" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: run multiple pktvisors instances using different ports
                when run pktvisor instance on port available with user permission ... passed in 1.143s 
                when run pktvisor instance on port available with user permission ... passed in 1.16s 
                when run pktvisor instance on port available with user permission ... passed in 1.157s 
                then 3 pktvisor's containers must be running ... passed in 0.00875s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="2.3185932636260986" name="Run_Multiple_Pktvisors_Instances_Using_The_Same_Port" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: run multiple pktvisors instances using the same port
                when run pktvisor instance on port available with user permission ... passed in 1.143s 
                when run pktvisor instance on port unavailable with user permission ... passed in 1.159s 
                then 1 pktvisor's containers must be running ... passed in 0.008199s 
                then 1 pktvisor's containers must be exited ... passed in 0.008704s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="2.237400770187378" name="Create_A_Policy_With_All_Handlers_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: create a policy with all handlers using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.179s 
                when create a new policy with all handler(s) ... passed in 1.056s 
                then 4 policies must be running ... passed in 0.001931s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="2.2376646995544434" name="Create_A_Policy_With_Net_Handler_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: create a policy with net handler using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.177s 
                when create a new policy with net handler(s) ... passed in 1.059s 
                then 4 policies must be running ... passed in 0.001457s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="2.2304701805114746" name="Create_A_Policy_With_Dhcp_Handler_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: create a policy with dhcp handler using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.169s 
                when create a new policy with dhcp handler(s) ... passed in 1.06s 
                then 4 policies must be running ... passed in 0.001475s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="2.1927266120910645" name="Create_A_Policy_With_Dns_Handler_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: create a policy with dns handler using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.131s 
                when create a new policy with dns handler(s) ... passed in 1.06s 
                then 4 policies must be running ... passed in 0.001494s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="2.187382459640503" name="Create_A_Policy_With_Pcap_Stats_Handler_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: create a policy with pcap stats handler using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.167s 
                when create a new policy with pcap_stats handler(s) ... passed in 1.019s 
                then 4 policies must be running ... passed in 0.001416s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="2.3200862407684326" name="Delete_The_Default_Policy_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: delete the default policy using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.153s 
                when delete 1 non-resource policies ... passed in 1.165s 
                then 0 policies must be running ... passed in 0.001496s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="6.259246587753296" name="Delete_All_Non-Resource_Policies_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: delete all non-resource policies using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.153s 
                given create a new policy with all handler(s) ... passed in 1.072s 
                when delete 2 non-resource policies ... passed in 4.033s 
                then 0 policies must be running ... passed in 0.0015s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="3.347951650619507" name="Delete_1_Non-Resource_Policy_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: delete 1 non-resource policy using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.134s 
                when create a new policy with all handler(s) ... passed in 1.033s 
                when delete 1 non-resource policies ... passed in 1.18s 
                then 2 policies must be running ... passed in 0.001178s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="1.1624197959899902" name="Delete_The_Default-Resource_Policy_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: delete the default-resource policy using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.156s 
                when delete 1 resource policies ... passed in 0.00518s 
                then 1 policies must be running ... passed in 0.001529s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="2.1915504932403564" name="Delete_All_Resource_Policies_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: delete all resource policies using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.155s 
                given create a new policy with all handler(s) ... passed in 1.03s 
                when delete 2 resource policies ... passed in 0.005585s 
                then 2 policies must be running ... passed in 0.001222s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="2.174891471862793" name="Delete_1_Resource_Policy_Using_Admin_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: delete 1 resource policy using admin permission
                given that a pktvisor instance is running on port available with admin permission ... passed in 1.149s 
                when create a new policy with all handler(s) ... passed in 1.021s 
                when delete 1 resource policies ... passed in 0.003816s 
                then 3 policies must be running ... passed in 0.00122s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="2.143383741378784" name="Create_A_Policy_Using_User_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: create a policy using user permission
                given that a pktvisor instance is running on port available with user permission ... passed in 1.136s 
                when try to create a new policy with all handler(s) ... passed in 1.005s 
                then status code returned on response must be 404 ... passed in 8.845e-05s 
                then 2 policies must be running ... passed in 0.001748s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="1.1419780254364014" name="Delete_1_Policy_Using_User_Permission" status="passed"
         classname="Pktvisor_Tests"><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: delete 1 policy using user permission
                given that a pktvisor instance is running on port available with user permission ... passed in 1.137s 
                when try to delete a policy ... passed in 0.002964s 
                then status code returned on response must be 404 ... passed in 6.437e-05s 
                then 2 policies must be running ... passed in 0.001551s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="1.1566481590270996" name="Pktvisor_Metrics_--_@1.1_" status="failed"
         classname="Pktvisor_Tests"><failure type="Jsondecodeerror" message=''>
                        <![CDATA[ Failing step: when run mocked data dns_ipv6_udp.pcap for this network ... failed in 0.005264s  Location:Featurespktvisor.Feature
                         File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
    match.run(runner.context)

                  File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
    self.func(context, *args, **kwargs)

                  File "features/steps/pktvisor.py", line 91, in run_mocked_data
    check_successful_packets(tcpreplay_return[0])

                  File "features/steps/pktvisor.py", line 210, in check_successful_packets
    return_command_tcpreplay = json.loads(return_command_tcpreplay)

                  File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)

                  File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())

                  File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
                        ]]>
                    </failure><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: pktvisor metrics -- @1.1 
                when run pktvisor instance on port available with user permission ... passed in 1.151s 
                when run mocked data dns_ipv6_udp.pcap for this network ... failed in 0.005264s 
                then the pktvisor container status must be running ... skipped in 0.0s 
                then pktvisor API must be enabled ... skipped in 0.0s 
                then metrics must be correctly generated ... skipped in 0.0s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="1.150968074798584" name="Pktvisor_Metrics_--_@1.2_" status="failed"
         classname="Pktvisor_Tests"><failure type="Jsondecodeerror" message=''>
                        <![CDATA[ Failing step: when run mocked data dns_ipv6_tcp.pcap for this network ... failed in 0.004559s  Location:Featurespktvisor.Feature
                         File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
    match.run(runner.context)

                  File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
    self.func(context, *args, **kwargs)

                  File "features/steps/pktvisor.py", line 91, in run_mocked_data
    check_successful_packets(tcpreplay_return[0])

                  File "features/steps/pktvisor.py", line 210, in check_successful_packets
    return_command_tcpreplay = json.loads(return_command_tcpreplay)

                  File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)

                  File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())

                  File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
                        ]]>
                    </failure><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: pktvisor metrics -- @1.2 
                when run pktvisor instance on port available with user permission ... passed in 1.146s 
                when run mocked data dns_ipv6_tcp.pcap for this network ... failed in 0.004559s 
                then the pktvisor container status must be running ... skipped in 0.0s 
                then pktvisor API must be enabled ... skipped in 0.0s 
                then metrics must be correctly generated ... skipped in 0.0s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="1.1532108783721924" name="Pktvisor_Metrics_--_@1.3_" status="failed"
         classname="Pktvisor_Tests"><failure type="Jsondecodeerror" message=''>
                        <![CDATA[ Failing step: when run mocked data dns_ipv4_udp.pcap for this network ... failed in 0.005053s  Location:Featurespktvisor.Feature
                         File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
    match.run(runner.context)

                  File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
    self.func(context, *args, **kwargs)

                  File "features/steps/pktvisor.py", line 91, in run_mocked_data
    check_successful_packets(tcpreplay_return[0])

                  File "features/steps/pktvisor.py", line 210, in check_successful_packets
    return_command_tcpreplay = json.loads(return_command_tcpreplay)

                  File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)

                  File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())

                  File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
                        ]]>
                    </failure><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: pktvisor metrics -- @1.3 
                when run pktvisor instance on port available with user permission ... passed in 1.148s 
                when run mocked data dns_ipv4_udp.pcap for this network ... failed in 0.005053s 
                then the pktvisor container status must be running ... skipped in 0.0s 
                then pktvisor API must be enabled ... skipped in 0.0s 
                then metrics must be correctly generated ... skipped in 0.0s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="1.1482391357421875" name="Pktvisor_Metrics_--_@1.4_" status="failed"
         classname="Pktvisor_Tests"><failure type="Jsondecodeerror" message=''>
                        <![CDATA[ Failing step: when run mocked data dns_ipv4_tcp.pcap for this network ... failed in 0.004782s  Location:Featurespktvisor.Feature
                         File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
    match.run(runner.context)

                  File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
    self.func(context, *args, **kwargs)

                  File "features/steps/pktvisor.py", line 91, in run_mocked_data
    check_successful_packets(tcpreplay_return[0])

                  File "features/steps/pktvisor.py", line 210, in check_successful_packets
    return_command_tcpreplay = json.loads(return_command_tcpreplay)

                  File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)

                  File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())

                  File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
                        ]]>
                    </failure><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: pktvisor metrics -- @1.4 
                when run pktvisor instance on port available with user permission ... passed in 1.143s 
                when run mocked data dns_ipv4_tcp.pcap for this network ... failed in 0.004782s 
                then the pktvisor container status must be running ... skipped in 0.0s 
                then pktvisor API must be enabled ... skipped in 0.0s 
                then metrics must be correctly generated ... skipped in 0.0s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="1.160778522491455" name="Pktvisor_Metrics_--_@1.5_" status="failed"
         classname="Pktvisor_Tests"><failure type="Jsondecodeerror" message=''>
                        <![CDATA[ Failing step: when run mocked data dhcp-flow.pcap for this network ... failed in 0.004538s  Location:Featurespktvisor.Feature
                         File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
    match.run(runner.context)

                  File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
    self.func(context, *args, **kwargs)

                  File "features/steps/pktvisor.py", line 91, in run_mocked_data
    check_successful_packets(tcpreplay_return[0])

                  File "features/steps/pktvisor.py", line 210, in check_successful_packets
    return_command_tcpreplay = json.loads(return_command_tcpreplay)

                  File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)

                  File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())

                  File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
                        ]]>
                    </failure><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: pktvisor metrics -- @1.5 
                when run pktvisor instance on port available with user permission ... passed in 1.156s 
                when run mocked data dhcp-flow.pcap for this network ... failed in 0.004538s 
                then the pktvisor container status must be running ... skipped in 0.0s 
                then pktvisor API must be enabled ... skipped in 0.0s 
                then metrics must be correctly generated ... skipped in 0.0s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="1.1948585510253906" name="Pktvisor_Metrics_--_@1.6_" status="failed"
         classname="Pktvisor_Tests"><failure type="Jsondecodeerror" message=''>
                        <![CDATA[ Failing step: when run mocked data dns_udp_mixed_rcode.pcap for this network ... failed in 0.004707s  Location:Featurespktvisor.Feature
                         File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
    match.run(runner.context)

                  File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
    self.func(context, *args, **kwargs)

                  File "features/steps/pktvisor.py", line 91, in run_mocked_data
    check_successful_packets(tcpreplay_return[0])

                  File "features/steps/pktvisor.py", line 210, in check_successful_packets
    return_command_tcpreplay = json.loads(return_command_tcpreplay)

                  File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)

                  File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())

                  File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
                        ]]>
                    </failure><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: pktvisor metrics -- @1.6 
                when run pktvisor instance on port available with user permission ... passed in 1.19s 
                when run mocked data dns_udp_mixed_rcode.pcap for this network ... failed in 0.004707s 
                then the pktvisor container status must be running ... skipped in 0.0s 
                then pktvisor API must be enabled ... skipped in 0.0s 
                then metrics must be correctly generated ... skipped in 0.0s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase><testcase time="1.1735765933990479" name="Pktvisor_Bucket_Metrics_--_@1.1_" status="failed"
         classname="Pktvisor_Tests"><failure type="Jsondecodeerror" message=''>
                        <![CDATA[ Failing step: when run mocked data dns_ipv6_udp.pcap for this network ... failed in 0.004765s  Location:Featurespktvisor.Feature
                         File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
    match.run(runner.context)

                  File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
    self.func(context, *args, **kwargs)

                  File "features/steps/pktvisor.py", line 91, in run_mocked_data
    check_successful_packets(tcpreplay_return[0])

                  File "features/steps/pktvisor.py", line 210, in check_successful_packets
    return_command_tcpreplay = json.loads(return_command_tcpreplay)

                  File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)

                  File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())

                  File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
                        ]]>
                    </failure><system-out>
            <![CDATA[
            @scenario.begin
                @smoke
                scenario: pktvisor bucket metrics -- @1.1 
                given that a pktvisor instance is running on port available with user permission ... passed in 1.169s 
                when run mocked data dns_ipv6_udp.pcap for this network ... failed in 0.004765s 
                then Metrics must go through the 5 bucket(s) queue correctly ... skipped in 0.0s 
@scenario.end
            ----------------------------------------------------------------------------------------------------
            ]]>
            </system-out>
        </testcase></testsuite>