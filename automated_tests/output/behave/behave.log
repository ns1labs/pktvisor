Feature: pktvisor tests # features/pktvisor.feature:1

  @smoke
  Scenario: pktvisor bootstrap                                        # features/pktvisor.feature:4
    When run pktvisor instance on port available with user permission # features/steps/pktvisor.py:19
    Then the pktvisor container status must be running                # features/steps/pktvisor.py:42
    And pktvisor API must be enabled                                  # features/steps/pktvisor.py:58
    And 2 policies must be running                                    # features/steps/policies.py:11

  @smoke
  Scenario: run multiple pktvisors instances using different ports    # features/pktvisor.feature:12
    When run pktvisor instance on port available with user permission # features/steps/pktvisor.py:19
    And run pktvisor instance on port available with user permission  # features/steps/pktvisor.py:19
    And run pktvisor instance on port available with user permission  # features/steps/pktvisor.py:19
    Then 3 pktvisor's containers must be running                      # features/steps/pktvisor.py:50

  @smoke
  Scenario: run multiple pktvisors instances using the same port       # features/pktvisor.feature:20
    When run pktvisor instance on port available with user permission  # features/steps/pktvisor.py:19
    And run pktvisor instance on port unavailable with user permission # features/steps/pktvisor.py:19
    Then 1 pktvisor's containers must be running                       # features/steps/pktvisor.py:50
    And 1 pktvisor's containers must be exited                         # features/steps/pktvisor.py:50

  @smoke
  Scenario: create a policy with all handlers using admin permission                  # features/pktvisor.feature:28
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    When create a new policy with all handler(s)                                      # features/steps/policies.py:25
    Then 4 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: create a policy with net handler using admin permission                   # features/pktvisor.feature:36
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    When create a new policy with net handler(s)                                      # features/steps/policies.py:25
    Then 4 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: create a policy with dhcp handler using admin permission                  # features/pktvisor.feature:43
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    When create a new policy with dhcp handler(s)                                     # features/steps/policies.py:25
    Then 4 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: create a policy with dns handler using admin permission                   # features/pktvisor.feature:50
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    When create a new policy with dns handler(s)                                      # features/steps/policies.py:25
    Then 4 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: create a policy with pcap stats handler using admin permission            # features/pktvisor.feature:57
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    When create a new policy with pcap_stats handler(s)                               # features/steps/policies.py:25
    Then 4 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: delete the default policy using admin permission                          # features/pktvisor.feature:64
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    When delete 1 non-resource policies                                               # features/steps/policies.py:45
    Then 0 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: delete all non-resource policies using admin permission                   # features/pktvisor.feature:71
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    And create a new policy with all handler(s)                                       # features/steps/policies.py:25
    When delete 2 non-resource policies                                               # features/steps/policies.py:45
    Then 0 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: delete 1 non-resource policy using admin permission                       # features/pktvisor.feature:79
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    When create a new policy with all handler(s)                                      # features/steps/policies.py:25
    And delete 1 non-resource policies                                                # features/steps/policies.py:45
    Then 2 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: delete the default-resource policy using admin permission                 # features/pktvisor.feature:87
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    When delete 1 resource policies                                                   # features/steps/policies.py:45
    Then 1 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: delete all resource policies using admin permission                       # features/pktvisor.feature:94
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    And create a new policy with all handler(s)                                       # features/steps/policies.py:25
    When delete 2 resource policies                                                   # features/steps/policies.py:45
    Then 2 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: delete 1 resource policy using admin permission                           # features/pktvisor.feature:102
    Given that a pktvisor instance is running on port available with admin permission # features/steps/pktvisor.py:32
    When create a new policy with all handler(s)                                      # features/steps/policies.py:25
    And delete 1 resource policies                                                    # features/steps/policies.py:45
    Then 3 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: create a policy using user permission                                    # features/pktvisor.feature:110
    Given that a pktvisor instance is running on port available with user permission # features/steps/pktvisor.py:32
    When try to create a new policy with all handler(s)                              # features/steps/policies.py:40
    Then status code returned on response must be 404                                # features/steps/pktvisor.py:37
    And 2 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario: delete 1 policy using user permission                                    # features/pktvisor.feature:118
    Given that a pktvisor instance is running on port available with user permission # features/steps/pktvisor.py:32
    When try to delete a policy                                                      # features/steps/policies.py:67
    Then status code returned on response must be 404                                # features/steps/pktvisor.py:37
    And 2 policies must be running                                                   # features/steps/policies.py:11

  @smoke
  Scenario Outline: pktvisor metrics -- @1.1                          # features/pktvisor.feature:133
    When run pktvisor instance on port available with user permission # features/steps/pktvisor.py:19
    And run mocked data dns_ipv6_udp.pcap for this network            # features/steps/pktvisor.py:73
      Traceback (most recent call last):
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
          match.run(runner.context)
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
          self.func(context, *args, **kwargs)
        File "features/steps/pktvisor.py", line 90, in run_mocked_data
          check_successful_packets(tcpreplay_return[0])
        File "features/steps/pktvisor.py", line 177, in check_successful_packets
          return_command_tcpreplay = json.loads(return_command_tcpreplay)
        File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
          return _default_decoder.decode(s)
        File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
          obj, end = self.raw_decode(s, idx=_w(s, 0).end())
        File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
          obj, end = self.scan_once(s, idx)
      json.decoder.JSONDecodeError: Unterminated string starting at: line 1 column 2 (char 1)

    Then the pktvisor container status must be running                # None
    And metrics must be correctly generated                           # None

  @smoke
  Scenario Outline: pktvisor metrics -- @1.2                          # features/pktvisor.feature:134
    When run pktvisor instance on port available with user permission # features/steps/pktvisor.py:19
    And run mocked data dns_ipv6_tcp.pcap for this network            # features/steps/pktvisor.py:73
      Traceback (most recent call last):
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
          match.run(runner.context)
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
          self.func(context, *args, **kwargs)
        File "features/steps/pktvisor.py", line 90, in run_mocked_data
          check_successful_packets(tcpreplay_return[0])
        File "features/steps/pktvisor.py", line 177, in check_successful_packets
          return_command_tcpreplay = json.loads(return_command_tcpreplay)
        File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
          return _default_decoder.decode(s)
        File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
          obj, end = self.raw_decode(s, idx=_w(s, 0).end())
        File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
          obj, end = self.scan_once(s, idx)
      json.decoder.JSONDecodeError: Unterminated string starting at: line 1 column 2 (char 1)

    Then the pktvisor container status must be running                # None
    And metrics must be correctly generated                           # None

  @smoke
  Scenario Outline: pktvisor metrics -- @1.3                          # features/pktvisor.feature:135
    When run pktvisor instance on port available with user permission # features/steps/pktvisor.py:19
    And run mocked data dns_ipv4_udp.pcap for this network            # features/steps/pktvisor.py:73
      Traceback (most recent call last):
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
          match.run(runner.context)
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
          self.func(context, *args, **kwargs)
        File "features/steps/pktvisor.py", line 90, in run_mocked_data
          check_successful_packets(tcpreplay_return[0])
        File "features/steps/pktvisor.py", line 177, in check_successful_packets
          return_command_tcpreplay = json.loads(return_command_tcpreplay)
        File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
          return _default_decoder.decode(s)
        File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
          obj, end = self.raw_decode(s, idx=_w(s, 0).end())
        File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
          obj, end = self.scan_once(s, idx)
      json.decoder.JSONDecodeError: Unterminated string starting at: line 1 column 2 (char 1)

    Then the pktvisor container status must be running                # None
    And metrics must be correctly generated                           # None

  @smoke
  Scenario Outline: pktvisor metrics -- @1.4                          # features/pktvisor.feature:136
    When run pktvisor instance on port available with user permission # features/steps/pktvisor.py:19
    And run mocked data dns_ipv4_tcp.pcap for this network            # features/steps/pktvisor.py:73
      Traceback (most recent call last):
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
          match.run(runner.context)
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
          self.func(context, *args, **kwargs)
        File "features/steps/pktvisor.py", line 90, in run_mocked_data
          check_successful_packets(tcpreplay_return[0])
        File "features/steps/pktvisor.py", line 177, in check_successful_packets
          return_command_tcpreplay = json.loads(return_command_tcpreplay)
        File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
          return _default_decoder.decode(s)
        File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
          obj, end = self.raw_decode(s, idx=_w(s, 0).end())
        File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
          obj, end = self.scan_once(s, idx)
      json.decoder.JSONDecodeError: Unterminated string starting at: line 1 column 2 (char 1)

    Then the pktvisor container status must be running                # None
    And metrics must be correctly generated                           # None

  @smoke
  Scenario Outline: pktvisor metrics -- @1.5                          # features/pktvisor.feature:137
    When run pktvisor instance on port available with user permission # features/steps/pktvisor.py:19
    And run mocked data dhcp-flow.pcap for this network               # features/steps/pktvisor.py:73
      Traceback (most recent call last):
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
          match.run(runner.context)
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
          self.func(context, *args, **kwargs)
        File "features/steps/pktvisor.py", line 90, in run_mocked_data
          check_successful_packets(tcpreplay_return[0])
        File "features/steps/pktvisor.py", line 177, in check_successful_packets
          return_command_tcpreplay = json.loads(return_command_tcpreplay)
        File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
          return _default_decoder.decode(s)
        File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
          obj, end = self.raw_decode(s, idx=_w(s, 0).end())
        File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
          obj, end = self.scan_once(s, idx)
      json.decoder.JSONDecodeError: Unterminated string starting at: line 1 column 2 (char 1)

    Then the pktvisor container status must be running                # None
    And metrics must be correctly generated                           # None

  @smoke
  Scenario Outline: pktvisor metrics -- @1.6                          # features/pktvisor.feature:138
    When run pktvisor instance on port available with user permission # features/steps/pktvisor.py:19
    And run mocked data dns_udp_mixed_rcode.pcap for this network     # features/steps/pktvisor.py:73
      Traceback (most recent call last):
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/model.py", line 1329, in run
          match.run(runner.context)
        File "/tmp/teste/pktvisor/automated_tests/behave_pktvisor/lib/python3.8/site-packages/behave/matchers.py", line 98, in run
          self.func(context, *args, **kwargs)
        File "features/steps/pktvisor.py", line 90, in run_mocked_data
          check_successful_packets(tcpreplay_return[0])
        File "features/steps/pktvisor.py", line 177, in check_successful_packets
          return_command_tcpreplay = json.loads(return_command_tcpreplay)
        File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
          return _default_decoder.decode(s)
        File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
          obj, end = self.raw_decode(s, idx=_w(s, 0).end())
        File "/usr/lib/python3.8/json/decoder.py", line 353, in raw_decode
          obj, end = self.scan_once(s, idx)
      json.decoder.JSONDecodeError: Unterminated string starting at: line 1 column 2 (char 1)

    Then the pktvisor container status must be running                # None
    And metrics must be correctly generated                           # None

